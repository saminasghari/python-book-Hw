“Created on Friday May 12:23:40 2022””
@author : samin asghari”””


1) The key difference between the tuples and lists is that while the tuples are immutable objects the lists are mutable. This means that tuples cannot be changed while the lists can be modified. Tuples are more memory efficient than the lists.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) A tuple is created by placing all the items (elements) inside parentheses (), separated by commas. The parentheses are optional, however, it is a good practice to use them.
A tuple can have any number of items and they may be of different types (integer, float, list, string, etc.).
(“ “)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) tuples are immutable
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4) lists and tuples are ordered collections of objects.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)m = (5,9,8,7)
a, b, c, d = m
print ((a, b, c, d))
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6)
a = (1, 2, 3, 4, 5, 6, 7, 8)
print(a)
s = a[3:7]
print(s)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7)
 tpl = 7,10,-3,18,6,10
t = tpl[0],tpl[-1]
x,y = t
print("x,y = ",t)

or

tpl = (7, 10, -3, 18, 6, 10)
x, a, b, c, d, y = tpl
print (x, y)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8)
def product(*name):
    Product = 1
    for i in name:
        Product *= i
    return Product



print(product(7,9,32))
print(product())
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9)def zero_sum(tuple):
    a=0
    for i in tuple:
        a+=i
    if a==0:
        return True
    elif a!=0:
        return False


tuple=(6,-6,0)
output= zero_sum(tuple)
print(output)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10)because it permits access based on a key
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11)Empty dictionary is also created by dict() built-in function without any arguments.
the statement adds the key and pairs it with the value on the right of the assignment operator.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12) print(d[Fred])
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13)"A python KeyError exception is what is raised when you try to access a key that isn't in a dictionary"

14)A Python KeyError exception is what is raised when you try to access a key that isn't in a dictionary ( dict ). Python's official documentation says that the KeyError is raised when a mapping key is accessed and isn't found in the mapping. 
Print(“ “)

15) Dictionary is a built-in Python Data Structure that is mutable.

16) d = {3:0, 5:1, 10:1, 8:2, 15:4} - print..
#(a) : {3: 0, 5: 1, 10: 1, 8: 2, 15: 4}
#(b):         3
              5
             10
              8
             15
 #(c):
              3
              5
             10
              8
             15
 #(d): it prints:         #0
                          # 1
                          # 1
                          # 2
                          # 4
17)elements in dictionaries are ordered
--------------------------------------------------------------------------------------------------------------------------------------------------
18)
print("light on/off")
from tkinter import Tk, Canvas
from tkinter.ttk import Button, Frame
def do_button_press():
    global color
    if color == 'black':
        color = 'yellow'
        canvas.itemconfigure(yellow_lamp, fill='yellow') #turn yellow on

    elif color == 'yellow':
        color = 'black'
        canvas.itemconfigure(yellow_lamp, fill='black') #turn off


color = 'black'     #the lights current color
root = Tk ()         #create the main window


root.title("light")

frame = Frame(root)    #create a frame to hold the widgets
frame.pack()           #make the frame fill the entire window

#create a drawing surface within the frame
canvas = Canvas(frame, width=150, height=200)

#set up the visual aspects of the light

#yellow lamp
yellow_lamp = canvas.create_oval(70, 150, 130, 80, fill='black')


#create a graphical button and ensure it calls the do_button_press function when the user presses it
button = Button(frame, text='turn on/ turn off', command=do_button_press)

button.grid(row=0, column=0)
canvas.grid(row=0, column=1)

#start the GUI event loop
root.mainloop()
-------------------------------------------------------------------------------------------------------------------------------

19)
class Circle():
    def _init_(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

    def perimeter(self):
        return 2*self.radius*3.14

r = int(input("please enter the radius: "))
NewCircle = Circle(r)
print("Area of the circle: ", NewCircle.area())
print("Perimeter of circle: " ,NewCircle.perimeter())




20)-because the correct sentence is: a =()
-because if you want to use {} you must contain at least one element

21)) to create an empty set in python we have to use the set() function without any arguments, if we will use empty curly braces ” {} ” then we will get an empty dictionary. After writing the above code (create an empty set in python), Ones you will print “type(x)” then the output will appear as a “ <class 'set'> ”.
samin = list()

print("it is: ", samin)

22)python sets are mutable.

23)
A = {20, 19, 2, 10, 7} 
B = {4, 10, 5, 6, 9, 7} 
C = {10, 19}

(A): {2, 19, 20, 7, 10}
(B):True
(C):False
(d): {10, 7}
(e): {2, 4, 5, 6, 7, 9, 10, 19, 20}
(f) :True
(g):True
(h):False
(i):True
(j):False
(k): 5
(l): {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
(m): {0, 5, 8, 17, 18}
(n):{0,5}







